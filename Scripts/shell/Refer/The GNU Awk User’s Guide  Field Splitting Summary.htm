<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0103)https://www.gnu.org/software/gawk/manual/html_node/Field-Splitting-Summary.html#Field-Splitting-Summary -->
<html><!-- 
Copyright (C) 1989, 1991, 1992, 1993, 1996-2005, 2007, 2009-2014 

Free Software Foundation, Inc.



This is Edition 4.1 of GAWK: Effective AWK Programming: A User's Guide for GNU Awk,
for the 4.1.1 (or later) version of the GNU
implementation of AWK.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "GNU General Public License", the Front-Cover
texts being (a) (see below), and with the Back-Cover Texts being (b)
(see below).  A copy of the license is included in the section entitled
"GNU Free Documentation License".

a. "A GNU Manual"

b. "You have the freedom to
copy and modify this GNU manual.  Buying copies from the FSF
supports it in developing GNU and promoting software freedom." --><!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ --><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>The GNU Awk User’s Guide: Field Splitting Summary</title>

<meta name="description" content="The GNU Awk User’s Guide: Field Splitting Summary">
<meta name="keywords" content="The GNU Awk User’s Guide: Field Splitting Summary">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">

<link href="https://www.gnu.org/software/gawk/manual/html_node/index.html#Top" rel="start" title="Top">
<link href="https://www.gnu.org/software/gawk/manual/html_node/Index.html#Index" rel="index" title="Index">
<link href="https://www.gnu.org/software/gawk/manual/html_node/index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="https://www.gnu.org/software/gawk/manual/html_node/Field-Separators.html#Field-Separators" rel="up" title="Field Separators">
<link href="https://www.gnu.org/software/gawk/manual/html_node/Constant-Size.html#Constant-Size" rel="next" title="Constant Size">
<link href="https://www.gnu.org/software/gawk/manual/html_node/Full-Line-Fields.html#Full-Line-Fields" rel="prev" title="Full Line Fields">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
-->
</style>


</head>

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
<a name="Field-Splitting-Summary"></a>
<div class="header">
<p>
Previous: <a href="https://www.gnu.org/software/gawk/manual/html_node/Full-Line-Fields.html#Full-Line-Fields" accesskey="p" rel="prev">Full Line Fields</a>, Up: <a href="https://www.gnu.org/software/gawk/manual/html_node/Field-Separators.html#Field-Separators" accesskey="u" rel="up">Field Separators</a> &nbsp; [<a href="https://www.gnu.org/software/gawk/manual/html_node/index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="https://www.gnu.org/software/gawk/manual/html_node/Index.html#Index" title="Index" rel="index">Index</a>]</p>
</div>
<hr>
<a name="Field_002dSplitting-Summary"></a>
<h4 class="subsection">4.5.6 Field-Splitting Summary</h4>

<p>It is important to remember that when you assign a string constant
as the value of <code>FS</code>, it undergoes normal <code>awk</code> string
processing.  For example, with Unix <code>awk</code> and <code>gawk</code>,
the assignment ‘<samp>FS = "\.."</samp>’ assigns the character string <code>".."</code>
to <code>FS</code> (the backslash is stripped).  This creates a regexp meaning
“fields are separated by occurrences of any two characters.”
If instead you want fields to be separated by a literal period followed
by any single character, use ‘<samp>FS = "\\.."</samp>’.
</p>
<p>The following table summarizes how fields are split, based on the value
of <code>FS</code> (‘<samp>==</samp>’ means “is equal to”):
</p>
<dl compact="compact">
<dt><code>FS == " "</code></dt>
<dd><p>Fields are separated by runs of whitespace.  Leading and trailing
whitespace are ignored.  This is the default.
</p>
</dd>
<dt><code>FS == <var>any other single character</var></code></dt>
<dd><p>Fields are separated by each occurrence of the character.  Multiple
successive occurrences delimit empty fields, as do leading and
trailing occurrences.
The character can even be a regexp metacharacter; it does not need
to be escaped.
</p>
</dd>
<dt><code>FS == <var>regexp</var></code></dt>
<dd><p>Fields are separated by occurrences of characters that match <var>regexp</var>.
Leading and trailing matches of <var>regexp</var> delimit empty fields.
</p>
</dd>
<dt><code>FS == ""</code></dt>
<dd><p>Each individual character in the record becomes a separate field.
(This is a <code>gawk</code> extension; it is not specified by the
POSIX standard.)
</p></dd>
</dl>

<a name="index-sidebar_002c-Changing-FS-Does-Not-Affect-the-Fields"></a>

<table class="cartouche" border="1"><tbody><tr><td>
<div align="center"><b>Changing <code>FS</code> Does Not Affect the Fields</b>
</div>


<a name="index-POSIX-awk_002c-field-separators-and-1"></a>
<a name="index-field-separator_002c-POSIX-and"></a>
<p>According to the POSIX standard, <code>awk</code> is supposed to behave
as if each record is split into fields at the time it is read.
In particular, this means that if you change the value of <code>FS</code>
after a record is read, the value of the fields (i.e., how they were split)
should reflect the old value of <code>FS</code>, not the new one.
</p>
<a name="index-dark-corner_002c-field-separators"></a>
<a name="index-sed-utility"></a>
<a name="index-stream-editors"></a>
<p>However, many older implementations of <code>awk</code> do not work this way.  Instead,
they defer splitting the fields until a field is actually
referenced.  The fields are split
using the <em>current</em> value of <code>FS</code>!
(d.c.)
This behavior can be difficult
to diagnose. The following example illustrates the difference
between the two methods.
(The <code>sed</code><a name="DOCF23" href="https://www.gnu.org/software/gawk/manual/html_node/Field-Splitting-Summary.html#FOOT23"><sup>23</sup></a>
command prints just the first line of <samp>/etc/passwd</samp>.)
</p>
<div class="example">
<pre class="example">sed 1q /etc/passwd | awk '{ FS = ":" ; print $1 }'
</pre></div>

<p>which usually prints:
</p>
<div class="example">
<pre class="example">root
</pre></div>

<p>on an incorrect implementation of <code>awk</code>, while <code>gawk</code>
prints something like:
</p>
<div class="example">
<pre class="example">root:nSijPlPhZZwgE:0:0:Root:/:
</pre></div>
</td></tr></tbody></table>

<a name="index-sidebar_002c-FS-and-IGNORECASE"></a>

<table class="cartouche" border="1"><tbody><tr><td>
<div align="center"><b><code>FS</code> and <code>IGNORECASE</code></b>
</div>


<p>The <code>IGNORECASE</code> variable
(see <a href="https://www.gnu.org/software/gawk/manual/html_node/User_002dmodified.html#User_002dmodified">User-modified</a>)
affects field splitting <em>only</em> when the value of <code>FS</code> is a regexp.
It has no effect when <code>FS</code> is a single character, even if
that character is a letter.  Thus, in the following code:
</p>
<div class="example">
<pre class="example">FS = "c"
IGNORECASE = 1
$0 = "aCa"
print $1
</pre></div>

<p>The output is ‘<samp>aCa</samp>’.  If you really want to split fields on an
alphabetic character while ignoring case, use a regexp that will
do it for you.  E.g., ‘<samp>FS = "[c]"</samp>’.  In this case, <code>IGNORECASE</code>
will take effect.
</p></td></tr></tbody></table>


<div class="footnote">
<hr>
<h4 class="footnotes-heading">Footnotes</h4>

<h3><a name="FOOT23" href="https://www.gnu.org/software/gawk/manual/html_node/Field-Splitting-Summary.html#DOCF23">(23)</a></h3>
<p>The <code>sed</code> utility is a “stream editor.”
Its behavior is also defined by the POSIX standard.</p>
</div>
<hr>
<div class="header">
<p>
Previous: <a href="https://www.gnu.org/software/gawk/manual/html_node/Full-Line-Fields.html#Full-Line-Fields" accesskey="p" rel="prev">Full Line Fields</a>, Up: <a href="https://www.gnu.org/software/gawk/manual/html_node/Field-Separators.html#Field-Separators" accesskey="u" rel="up">Field Separators</a> &nbsp; [<a href="https://www.gnu.org/software/gawk/manual/html_node/index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="https://www.gnu.org/software/gawk/manual/html_node/Index.html#Index" title="Index" rel="index">Index</a>]</p>
</div>





</body></html>