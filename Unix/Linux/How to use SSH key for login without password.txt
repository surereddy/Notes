|- How to use ssh key to login without password
https://help.ubuntu.com/community/SSH/OpenSSH/Keys

||-Theory:
It is a pair of private and public keys.
private is an identity of client, and could be copied to any client machine to re-use.
public key is put at target server host, and it matches the private key for authentication.

It doesn't matter where you generate the pair, you can do it at client or server host, or even other hosts.
Just remember to put public key at server host authorized_keys, and private key at client host.


||- How to:
Generating RSA Keys

This should be done on the client.
To create your public and private SSH keys on the command-line:
su - peter
mkdir ~/.ssh
chmod 700 ~/.ssh
ssh-keygen -t rsa

# Empty for no passphrase is okay. Or you want one, you will be prompted to enter passphrase of the ssh key in log in for further security.
Enter passphrase (empty for no passphrase): 

Your identification has been saved in /home/peter/.ssh/id_rsa.
Your public key has been saved in /home/peter/.ssh/id_rsa.pub.


Transfer Client Key to Target Server Host
Copy the 'one line' full content from client /home/peter/.ssh/id_rsa.pub to append to target server host's authorized_keys, 
e.g. /root/.ssh/authorized_keys if you want to log on the target server as root.

The pub key is a LONG line content and displayed as multi lines, you may copy them as multi-lines by mistake and it won't work.
Easy ways:
1. Copy the id_rsa.pub from client to server, e.g. to /root/id_rsa.pub, then append to authorized_keys.
   cat /root/id_rsa.pub >> ~root/.ssh/authorized_keys
 

||- To use:
ssh <target user>@<target server host>
e.g. ssh root@128.199.98.56

Or you can specify the private location by -i, e.g.,
ssh -i ~peter/.ssh/id_rsa peter@128.199.98.56


||- Putty Special:
The private key generated in linux cannot be used in putty in windows because putty has its format to write and read the private key file.
	You will need to generate a key pair by puttygen for putty usage, and copy the public key while in the puttygen window to the target host. 
	Don't save the public key as a file and then copy it since it is not in correct 'one line' format anymore.
https://www.digitalocean.com/community/tutorials/how-to-use-ssh-keys-with-putty-on-digitalocean-droplets-windows-users


||- Busybox Special:
https://yorkspace.wordpress.com/2009/04/08/using-public-keys-with-dropbear-ssh-client/

Busybox uses dropbear as ssh, it uses a different format to store and read the private key, use dropbearkey to generate it.
And it does not support default private ~/.ssh/id_rsa, you have to specify the location by -i.

Example:
# dropbearkey -t rsa -f ~/.ssh/id_rsa
Will output 1024 bit rsa secret key to '/root/.ssh/id_rsa'
Generating key, this may take a while...
Public key portion is:
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgwCQCJE/46SZ17adWm09+t5cVMBbxGU+++C4DEtoNbp20lxYLP623vZ+h0dp53Gg2DiMKbl5iKZZSnats8Td8/HFMgFeO9xjhHF5fuyYEUFcAUAIeOO2yh1ylSSmzeGVRbnIIlnJ6CG6dzOE82BQMyx5DxPeg1B2TBg6R90tXWiPoa4V root@TDC-90500517
Fingerprint: md5 3d:6e:bc:77:c0:c0:e0:20:f5:96:82:d9:b5:d0:2b:fc


# dropbearkey -y -f ~/.ssh/id_rsa | grep "^ssh-rsa" | tee id_rsa.pub_TDCp_dropbear
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgwCQCJE/46SZ17adWm09+t5cVMBbxGU+++C4DEtoNbp20lxYLP623vZ+h0dp53Gg2DiMKbl5iKZZSnats8Td8/HFMgFeO9xjhHF5fuyYEUFcAUAIeOO2yh1ylSSmzeGVRbnIIlnJ6CG6dzOE82BQMyx5DxPeg1B2TBg6R90tXWiPoa4V root@TDC-90500517

Now append id_rsa.pub_TDCp_dropbear to ~/.ssh/authorized_keys on ‘target normal linux host’ (e.g. comms server). Ensure that permissions on this file are set to 600.
You should now be able to ssh without a password.


ssh -i ~/.ssh/id_rsa ubuntu@52.64.120.214

If you want to log in a busybox host, it is said the public key should be here. But it did not work for me.
/etc/dropbear/authorized_keys 

cat /root/id_rsa.pub >> /etc/dropbear/authorized_keys
chmod 600 /etc/dropbear/authorized_keys
 

||- Notes:
1. Make sure you id_rsa and authorized_keys files in mode 600 if you copy them from other machine or create them manually, otherwise a warning or error may occur.


||- How to force login with ssh key, i.e. disable password login
Take root user for example:
vi /etc/ssh/sshd_config
# Authentication:
#PermitRootLogin yes
PermitRootLogin without-password
RSAAuthentication yes
PubkeyAuthentication yes

/etc/init.d/ssh restart
